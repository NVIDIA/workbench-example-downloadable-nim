specVersion: v2
specMinorVersion: 2
meta:
    name: downloadable-nim
    image: project-downloadable-nim
    description: An NVIDIA AI Workbench example project for chatting with a downloadable NIM
    labels: []
    createdOn: "2025-02-10T23:54:36Z"
    defaultBranch: main
layout:
    - path: code/
      type: code
      storage: git
    - path: models/
      type: models
      storage: gitlfs
    - path: data/
      type: data
      storage: gitlfs
    - path: data/scratch/
      type: data
      storage: gitignore
    - path: nim_cache/
      type: code
      storage: git
environment:
    base:
        registry: nvcr.io
        image: nvidia/ai-workbench/python-basic:1.0.2
        build_timestamp: "20231114175838"
        name: Python Basic
        supported_architectures: []
        cuda_version: ""
        description: A Python Base with Jupyterlab
        entrypoint_script: ""
        labels:
            - ubuntu
            - python3
            - jupyterlab
        apps:
            - name: jupyterlab
              type: jupyterlab
              class: webapp
              start_command: jupyter lab --allow-root --port 8888 --ip 0.0.0.0 --no-browser --NotebookApp.base_url=\$PROXY_PREFIX --NotebookApp.default_url=/lab --NotebookApp.allow_origin='*'
              health_check_command: '[ \$(echo url=\$(jupyter lab list | head -n 2 | tail -n 1 | cut -f1 -d'' '' | grep -v ''Currently'' | sed "s@/?@/lab?@g") | curl -o /dev/null -s -w ''%{http_code}'' --config -) == ''200'' ]'
              stop_command: jupyter lab stop 8888
              user_msg: ""
              logfile_path: ""
              timeout_seconds: 60
              icon_url: ""
              webapp_options:
                autolaunch: true
                port: "8888"
                proxy:
                    trim_prefix: false
                url_command: jupyter lab list | head -n 2 | tail -n 1 | cut -f1 -d' ' | grep -v 'Currently'
        programming_languages:
            - python3
        icon_url: ""
        image_version: 1.0.2
        os: linux
        os_distro: ubuntu
        os_distro_release: "22.04"
        schema_version: v2
        user_info:
            uid: ""
            gid: ""
            username: ""
        package_managers:
            - name: apt
              binary_path: /usr/bin/apt
              installed_packages:
                - curl
                - git
                - git-lfs
                - python3
                - gcc
                - python3-dev
                - python3-pip
                - vim
            - name: pip
              binary_path: /usr/local/bin/pip
              installed_packages:
                - jupyterlab==4.0.7
        package_manager_environment:
            name: ""
            target: ""
    compose_file_path: ""
execution:
    apps:
        - name: Chat
          type: custom
          class: webapp
          start_command: cd /project/code && streamlit run Chat.py --server.baseUrlPath=$PROXY_PREFIX
          health_check_command: curl -I http://localhost:8501
          stop_command: pkill -f 'streamlit run Chat.py'
          user_msg: ""
          logfile_path: ""
          timeout_seconds: 60
          icon_url: developer.download.nvidia.com/icons/m48-nim-256px-blk.png
          webapp_options:
            autolaunch: true
            port: "8501"
            proxy:
                trim_prefix: false
            url: http://localhost:8501
    resources:
        gpu:
            requested: 0
        sharedMemoryMB: 0
    secrets:
        - variable: NVIDIA_API_KEY
          description: Generate your API Key on build.nvidia.com
    mounts:
        - type: project
          target: /project/
          description: Project directory
          options: rw
        - type: volume
          target: /nvwb-shared-volume/
          description: ""
          options: volumeName=nvwb-shared-volume
